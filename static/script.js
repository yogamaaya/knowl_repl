
const d=document,w=window,ls=localStorage,cur={docCheck:null,loadToast:null,docId:null,audio:null,playing:!1,msgs:[]};async function submitMessage(e){e.preventDefault();const t=d.getElementById("messageInput"),n=t.value,s=d.getElementById("loading");if(!n||!n.trim())return;try{s.style.display="block";const e=await fetch("/submit",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:n})}),o=await e.json();e.ok&&(updateChat(o.messages),t.value="",o.audio_url&&(w.lastAudioUrl=o.audio_url,d.getElementById("playAudioBtn").style.display="inline-block"))}catch(e){console.error("Error:",e)}finally{s.style.display="none"}}function updateChat(e){const t=d.getElementById("chatBox");if(t.innerHTML="",cur.msgs=e,cur.msgs.length>=2){const n=cur.msgs.length-2,s=cur.msgs.length-1,o=d.createElement("div");o.className="chat-message",o.innerHTML=`<img src="/static/user_logo.png" alt="User Logo" class="logo"><div class="message-bubble">${cur.msgs[n]}</div>`,t.appendChild(o);const a=d.createElement("div");a.className="chat-message",a.innerHTML=`<img src="/static/knowl_logo.png" alt="Knowl Logo" class="logo"><div class="message-bubble">${cur.msgs[s]}</div>`,t.appendChild(a)}}async function handleChangeText(){cur.docCheck&&cur.docCheck.abort(),cur.loadToast&&cur.loadToast.remove();const e=d.getElementById("customAlertContainer");e&&e.remove();try{cur.loadToast=showToast("Please have text ready to paste into new document...",!0);const e=await fetch("/create_doc",{method:"POST"});if(!e.ok)throw Error("Failed to create document");const t=await e.json();if(!t.doc_id)throw Error("No document ID received");cur.docId=t.doc_id;const n=`https://docs.google.com/document/${t.doc_id}/edit`;w.open(n,"_blank");let s=!1;const o=Date.now();cur.docCheck=new AbortController;const a=t.doc_id;for(;!s&&!cur.docCheck.signal.aborted;){const e=Math.floor((Date.now()-o)/1e3);if(e>=60){if(a===cur.docId){if(!await new Promise(e=>{d.getElementById("overlayContainer").innerHTML=`<div id="customAlertContainer"><div class="overlay"></div><div class="custom-alert"><div>No content found after 60 seconds.</div><div class="buttons"><button onclick="handleAlertResponse(true)">Continue Waiting</button><button onclick="handleAlertResponse(false)">Cancel</button></div></div></div>`,w.handleAlertResponse=t=>{d.getElementById("overlayContainer").innerHTML="",e(t)}})){cur.docCheck.abort(),cur.loadToast.remove(),showToast("User cancelled updating text source","error");return}}else break}try{cur.loadToast.textContent=`Checking for content... ${e}s`;const n=await fetch("/check_doc_content",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({doc_id:t.doc_id}),signal:cur.docCheck.signal});if(!n.ok)throw Error("Failed to check document content");(await n.json()).has_content&&(s=!0)}catch(e){if("AbortError"===e.name)return;throw e}await new Promise(e=>setTimeout(e,3e3))}if(s&&a===cur.docId){cur.loadToast.textContent="Updating knowledge base...";const e=await fetch("/update_embeddings",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({doc_id:t.doc_id})});if(!e.ok)throw Error("Failed to update knowledge base");const s=await e.json();if(!s.success)throw Error("Failed to update knowledge base");ls.setItem("currentSourceTitle",s.title),ls.setItem("currentDocId",t.doc_id);const o=JSON.parse(ls.getItem("docHistory")||"[]"),r={id:t.doc_id,title:s.title,timestamp:new Date().toISOString()};if(!o.some(e=>e.id===r.id)){o.push(r),ls.setItem("docHistory",JSON.stringify(o));try{(await fetch("/save_doc_history",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({docHistory:o})})).ok&&w.postMessage("refreshHistory","*")}catch(e){console.error("Failed to save doc history:",e)}}cur.loadToast.remove(),showToast("Text Source Updated Successfully","success");const i=d.getElementById("toastContainer"),c=i.querySelector(".source-toast");c&&c.remove();const l=d.createElement("div");l.className="toast persistent source-toast",l.innerHTML=`<a href="${n}" target="_blank" style="color: white; text-decoration: underline;">Current source: ${s.title}</a>`,i.appendChild(l),setTimeout(()=>l.classList.add("show"),10)}}catch(e){console.error("Error:",e),cur.loadToast&&cur.loadToast.remove(),showToast(e.message,"error")}}function showToast(e,t=""){const n=d.getElementById("toastContainer"),s=d.createElement("div");return s.className=`toast ${t}`,s.textContent=e,n.appendChild(s),s.offsetHeight,setTimeout(()=>s.classList.add("show"),10),t||setTimeout(()=>{s.classList.remove("show"),setTimeout(()=>n.removeChild(s),300)},3e3),s}function toggleAudio(){const e=d.getElementById("playAudioBtn");!cur.audio&&w.lastAudioUrl&&(cur.audio=new Audio(w.lastAudioUrl),cur.audio.addEventListener("ended",()=>{e.textContent="Play Response 🔊",cur.playing=!1})),cur.audio&&(cur.playing?(cur.audio.pause(),e.textContent="Play Response 🔊",cur.playing=!1):(cur.audio.play(),e.textContent="Pause Response ⏸️",cur.playing=!0))}w.addEventListener("load",async function(){cur.msgs=["Who is Knowl and How to Use?",`✨ Knowl is intented to be your fun partner to understand a text from a different perspective of your own ✨<br><br>🌕 The way to helpful responses is in asking helpful questions. Here are some tips to ask effectively:<br><br>🌖 Try prefacing questions with "In this context", "According to this text" etc!<br><br>🌗 Whenever you paste new text, please ask <b>new and specific questions to get new answers.</b><br>Knowl retains all information of text corpora given to date.<br><br>🌘 You can try rephrasing the same question or command if a response doesn't please you!<br>A starter question is "What is the main focus of this text?"<br><br>🌑 Try to use keywords of the text, and reference the current context as much as possible.<br><br><p>PS: Please be patient with Knowl as she thinks~ 🦉</p>`],updateChat(cur.msgs);try{const e=await fetch("/update_embeddings",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({doc_id:"1noKTwTEgvl1G74vYutrdwBZ6dWMiNOuoZWjGR1mwC9A"})});if(e.ok){const t=await e.json();if(t.success){const e=`https://docs.google.com/document/d/1noKTwTEgvl1G74vYutrdwBZ6dWMiNOuoZWjGR1mwC9A/edit`;ls.setItem("currentSourceTitle",t.title),ls.setItem("currentDocId","1noKTwTEgvl1G74vYutrdwBZ6dWMiNOuoZWjGR1mwC9A");const n=d.createElement("div");n.className="toast persistent source-toast";const s=d.createElement("a");s.href=e,s.target="_blank",s.style.cssText="color: white; text-decoration: underline; cursor: pointer;",s.textContent=`Current source: ${t.title}`,n.appendChild(s),d.getElementById("toastContainer").appendChild(n),setTimeout(()=>n.classList.add("show"),10)}}}catch(e){console.error("Error loading default document:",e)}});
